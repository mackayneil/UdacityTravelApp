{"version":3,"file":"main.js","mappings":"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","sources":["webpack://Client/webpack/bootstrap","webpack://Client/webpack/runtime/define property getters","webpack://Client/webpack/runtime/global","webpack://Client/webpack/runtime/hasOwnProperty shorthand","webpack://Client/webpack/runtime/make namespace object","webpack://Client/webpack/runtime/publicPath","webpack://Client/./src/client/assets/background-image.jpg","webpack://Client/./src/client/assets/france.jpg","webpack://Client/./src/client/assets/spain.jpg","webpack://Client/./src/client/assets/thailand.jpg","webpack://Client/./src/client/assets/japan.jpg","webpack://Client/./src/client/js/handleTabs.js","webpack://Client/./src/client/js/handleInput.js","webpack://Client/./src/client/js/handleDate.js","webpack://Client/./src/client/js/updateWeather.js","webpack://Client/./src/client/js/updateDetailsPanel.js","webpack://Client/./src/client/js/updateCurrentDate.js","webpack://Client/./src/client/js/clearInputs.js","webpack://Client/./src/client/js/updateForecast.js","webpack://Client/./src/client/js/updateImages.js","webpack://Client/./src/client/js/handleImages.js","webpack://Client/./src/client/js/getTodayDate.js","webpack://Client/./src/client/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","export default __webpack_public_path__ + \"9962f118e298c3130c585bf86f4bbdaa.jpg\";","export default __webpack_public_path__ + \"47a447cdadeafeef114068e71c3ed62e.jpg\";","export default __webpack_public_path__ + \"e8c6154c251cbd2d65fe764ba5ababd8.jpg\";","export default __webpack_public_path__ + \"5ebfb956e03c3ebff3008541109e45e4.jpg\";","export default __webpack_public_path__ + \"7a5be874cbd6da9dc643ec663d0d0813.jpg\";","// Functionality for switching tabs\nconst handleTabs = () => {\n    const tabs = document.querySelector('.tabs')\n    const tab = document.querySelectorAll('.tab')\n    const content = document.querySelectorAll('.content')\n\n    const toggleTabs = (e) => {\n        const clickedTab = e.target;\n        if(!clickedTab.classList.contains('selected')){         \n            tab.forEach(function(i) {\n                i.classList.remove('selected')\n            })\n            clickedTab.classList.add('selected')\n\n            content.forEach(function(i) {\n                i.classList.add('d-none')\n                if (i.id === clickedTab.dataset.id) {\n                    i.classList.remove('d-none')\n                }\n            })\n        };\n    }\n\n    if (tabs) {\n        tabs.addEventListener('click', toggleTabs)\n    }\n    \n}\nhandleTabs()\n\nexport { handleTabs }","import { updateWeather } from './updateWeather';\nimport { updateDetailsPanel } from './updateDetailsPanel';\nimport { updateForecast } from './updateForecast';\nimport { updateCurrentDate } from './updateCurrentDate';\nimport { updateImages } from './updateImages';\nimport { handleDate } from './handleDate';\nimport { clearInputs } from './clearInputs';\n\nasync function handleInput(){\n    let long;\n    let lat\n    let city;\n    let cityObj\n\n    const userLocation = document.querySelector('#location').value;\n    const userLocationValue = { userLocation };\n    const startDate = document.querySelector('#trip-start'); \n    const endDate = document.querySelector('#trip-end');\n    const endDateValue = endDate.value;\n    const warningMsg = document.querySelector('.warning-message');\n\n\n\n    if (userLocation === '' || endDateValue === '') {        \n       warningMsg.classList.remove('d-none')\n      } else { \n        warningMsg.classList.add('d-none')\n        handleDate(startDate, endDate)               \n        fetch('http://localhost:8080/location', {\n                method: 'POST',\n                credentials: 'same-origin',           \n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(userLocationValue),\n            })\n              .then(res => res.json())\n              .then(function (res) {            \n                lat = res.postalcodes[0].lat;\n                long = res.postalcodes[0].lng;\n              }\n            ).then(function() {               \n                const latLong = { long, lat }\n                fetch('http://localhost:8080/weather', {\n                    method: 'POST',\n                    credentials: 'same-origin',           \n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify(latLong),\n                })\n                  .then(res => res.json())\n                  .then(function (res) {  \n                      const data = res.data[0];                     \n                      updateWeather(data);\n                      updateDetailsPanel();                    \n                      city = data.city_name;\n                      updateCurrentDate();\n                      clearInputs();\n                  }\n                ).then(function() {\n                    cityObj = { city }\n                    fetch('http://localhost:8080/forecast', {\n                        method: 'POST',\n                        credentials: 'same-origin',           \n                        headers: {\n                            'Content-Type': 'application/json'\n                        },\n                        body: JSON.stringify(cityObj),\n                    })\n                      .then(res => res.json())\n                      .then(function (res) { \n                        const data = res.data;             \n                        updateForecast(data)\n                      }\n                    ); \n                }).then(function() {                 \n                  fetch('http://localhost:8080/images', {\n                      method: 'POST',\n                      credentials: 'same-origin',           \n                      headers: {\n                          'Content-Type': 'application/json'\n                      },\n                      body: JSON.stringify(userLocationValue),\n                  })\n                    .then(res => res.json())\n                    .then(function (res) {                      \n                      updateImages(res);\n                    }\n                  ); \n              });    \n            })\n        }\n}\n\n\n\nexport { handleInput }","// Inputs the data for the trip tab\nconst handleDate = (startDate, endDate) => {\n    const months = { \n        1: \"Jan\",\n        2: \"Feb\",\n        3: \"Mar\",\n        4: \"Apr\",\n        5: \"May\",\n        6: \"Jun\",\n        7: \"Jul\",\n        8: \"Aug\",\n        9: \"Sep\",\n        10: \"Oct\",\n        11: \"Nov\",\n        12: \"Dec\",\n    }\n    const departingDate = document.querySelector('#departing');\n    const daysLeft = document.querySelector('#days-left');\n    const lengthOfTrip = document.querySelector('#length-of-trip');\n    let tripLength = Math.round((endDate.valueAsNumber - startDate.valueAsNumber) / (1000 * 60 * 60 * 24));\n    const currentDate = new Date();\n    let daysRemaining = Math.round((startDate.valueAsNumber - currentDate.getTime()) / (1000 * 60 * 60 * 24));\n\n    let date = [...startDate.value.split('-')];\n    let year = date[0];\n    let month = date[1];\n    let day = date[2];\n    \n    // Calculates the length of the trip\n    if (tripLength === 1 || tripLength === 0) {\n        lengthOfTrip.innerHTML = `1 day`\n    } else {\n        lengthOfTrip.innerHTML = `${tripLength} days`\n    }\n    // Inputs the chosen departing day\n    departingDate.innerHTML = `${day} / ${months[month]} / ${year}`\n\n    // Calculates the number of days remaining\n    if (daysRemaining === -1 || daysRemaining === 1) {\n        daysLeft.innerHTML = `1 day`\n    } else {\n        daysLeft.innerHTML = `${daysRemaining} days`\n    }\n}\n\nexport { handleDate }","// Updates the weather info in the weather tab\nconst updateWeather = (data) => {\n    const condition = document.querySelector('.condition');\n    const temp = document.querySelector('#temperature');\n    const humidity = document.querySelector('#humidity');\n    const windSpeed = document.querySelector('#wind-speed');\n    const pressure = document.querySelector('#pressure');\n    const feelsLike = document.querySelector('#feels-like');\n\n    const weatherCode = data.weather.code;\n    const expr = weatherCode.toString().charAt(0);\n    let weatherIcon;\n\n    if (weatherCode === 800) {\n        weatherIcon = `☀️`;\n    } else {\n        switch (expr) {\n            case '2':\n                weatherIcon = `⛈`;\n              break;    \n            case '3':\n                weatherIcon = `🌧`;\n              break;    \n            case '5':\n                weatherIcon = `🌦`;\n              break;   \n            case '6':\n                weatherIcon = `🌨`;\n              break;    \n            case '7':\n                weatherIcon = `💨`;\n              break;  \n            case '8':\n                weatherIcon = `☁️`;\n              break;                           \n            default:\n                weatherIcon = `☀️`;\n          }\n    }\n    \n    condition.innerHTML = `${data.weather.description} ${weatherIcon}`;\n    temp.innerHTML = `${data.temp} °C`;\n    humidity.innerHTML = `${Math.round(data.rh)} %`;\n    windSpeed.innerHTML = `${Math.round(data.wind_spd)} m/s`;\n    pressure.innerHTML = `${data.pres} mb`;\n    feelsLike.innerHTML = `${data.app_temp} °C`;\n}\n\nexport { updateWeather }","// Hides the popular destinations tab and displays the details tab after a user has submited the info\nconst updateDetailsPanel = (data) => {\n    const popularDestinations = document.querySelector('.destination-card-container');\n    const tabs = document.querySelector('.tab-container');\n    const header = document.querySelector('#details-header');\n    const userLocation = document.querySelector('#location').value;\n\n    popularDestinations.classList.add('d-none')\n    tabs.classList.remove('d-none');\n    header.innerHTML = userLocation.charAt(0).toUpperCase() + userLocation.slice(1);    \n}\nexport { updateDetailsPanel }","// Updates current date on the weather tab\nconst updateCurrentDate = () => {\n    const months = { \n        0: \"Jan\",\n        1: \"Feb\",\n        2: \"Mar\",\n        3: \"Apr\",\n        4: \"May\",\n        5: \"Jun\",\n        6: \"Jul\",\n        7: \"Aug\",\n        8: \"Sep\",\n        9: \"Oct\",\n        10: \"Nov\",\n        11: \"Dec\",\n    }\n\n    const date = document.querySelector('.date')\n    const currentDate = new Date()\n    const month = currentDate.getMonth();\n    const year = currentDate.getFullYear();\n    const day = currentDate.getDate();\n    date.innerHTML = `${day} / ${months[month]} / ${year}`\n}\n\nexport { updateCurrentDate }","// Clears the user input to allow searching for a new location\nconst clearInputs = () => {\n    const userLocationInput = document.querySelector('#location');\n    const userStartDate = document.querySelector('#trip-start'); \n    const userEndDate = document.querySelector('#trip-end');\n   \n    userLocationInput.value = '';\n    userStartDate.value = '';\n    userEndDate.value = '';\n}\n\nexport { clearInputs }","// Updates the weather forecast\nconst updateForecast = (data) => {\n    const months = { \n        1: \"Jan\",\n        2: \"Feb\",\n        3: \"Mar\",\n        4: \"Apr\",\n        5: \"May\",\n        6: \"Jun\",\n        7: \"Jul\",\n        8: \"Aug\",\n        9: \"Sep\",\n        10: \"Oct\",\n        11: \"Nov\",\n        12: \"Dec\",\n    }\n\n    const forecastCards = document.querySelector('.forecast-cards');\n    forecastCards.innerHTML = ''; \n    for (let i = 1; i <= 5; i++) {\n        let date = [...data[i].valid_date.slice(5).split('-')];\n        let month = date[0];\n        let day = date[1];\n\n        const weatherCode = data[i].weather.code;\n        const expr = weatherCode.toString().charAt(0);\n        let weatherIcon;\n       // Matches the first number in the weather description code from the API\n        if (weatherCode === 800) {\n            weatherIcon = `☀️`;\n        } else {\n            switch (expr) {\n                case '2':\n                    weatherIcon = `⛈`;\n                  break;    \n                case '3':\n                    weatherIcon = `🌧`;\n                  break;    \n                case '5':\n                    weatherIcon = `🌦`;\n                  break;   \n                case '6':\n                    weatherIcon = `🌨`;\n                  break;    \n                case '7':\n                    weatherIcon = `💨`;\n                  break;  \n                case '8':\n                    weatherIcon = `☁️`;\n                  break;                           \n                default:\n                    weatherIcon = `☀️`;\n              }\n        }\n       \n        forecastCards.innerHTML += `<div class=\"forecast-card\">\n                                        <div>\n                                            <p class=\"forecast-date\">${day} ${months[month]}</p>\n                                            <p class=\"forecast-condition\">${data[i].weather.description} ${weatherIcon}</p>\n                                        </div>\n                                        <p class=\"max-min\">${Math.round(data[i].max_temp)} / ${Math.round(data[i].min_temp)} °C</p>\n                                    </div>`\n    }\n}\n\nexport { updateForecast }","// Updates the images tab\nconst updateImages = (data) => {\n    const imageCards = document.querySelector('.image-card-container');\n\n    const backgroundImg = document.querySelector(\"#background-img\");\n    backgroundImg.style.backgroundImage = `url(${data.hits[0].largeImageURL})`   \n    imageCards.innerHTML = '';\n    \n    for (let i = 1; i <= 5; i++) {\n        const imageUrl = data.hits[i].webformatURL;\n        imageCards.innerHTML += `<div class=\"image-card\" style=\"background-image: url(${imageUrl})\"></div>`\n    }\n}\n\nexport { updateImages }","// Assigns the background images to the UI when page loads - needed because webpack doesn't find the URL's\nconst handleImages = (bgImg, franceImg, spainImg, thailandImg, japanImg) => {\n    const backgroundImg = document.querySelector(\"#background-img\");\n    const france = document.querySelector('.france');\n    const spain = document.querySelector('.spain');\n    const thailand = document.querySelector('.thailand');\n    const japan = document.querySelector('.japan');\n\n    france.style.backgroundImage = `linear-gradient(90deg, rgba(0, 0, 0, 0.5) 0%, rgba(0, 0, 0, 0) 50%), url(${franceImg})`;\n    spain.style.backgroundImage = `linear-gradient(90deg, rgba(0, 0, 0, 0.5) 0%, rgba(0, 0, 0, 0) 50%), url(${spainImg})`;\n    thailand.style.backgroundImage = `linear-gradient(90deg, rgba(0, 0, 0, 0.5) 0%, rgba(0, 0, 0, 0) 50%), url(${thailandImg})`;\n    japan.style.backgroundImage = `linear-gradient(90deg, rgba(0, 0, 0, 0.5) 0%, rgba(0, 0, 0, 0) 50%), url(${japanImg})`;\n    backgroundImg.style.backgroundImage = `url(${bgImg})`   \n}\n\nexport { handleImages }","// Gets todays date to update the date pickers to prevent user from selecting a day in the past\nconst getTodayDate = () => {\n    const currentDate = new Date()\n    const month = currentDate.getMonth() + 1;\n    const year = currentDate.getFullYear();\n    const day = currentDate.getDate();\n\n    const startDate = document.querySelector('#trip-start');\n    const endDate = document.querySelector('#trip-end');\n\n \n\n    if (endDate) {\n        endDate.setAttribute('disabled', true)\n    }\n\n    if (startDate) {\n        startDate.setAttribute('min', `${year}-${month}-${day}`);\n        startDate.addEventListener('change', function() {\n            endDate.removeAttribute('disabled')       \n            endDate.setAttribute('min', `${startDate.value}`)        \n        })\n    }\n\n \n}\ngetTodayDate()\n\nexport { getTodayDate }","import './css/base.scss'\nimport './css/destination-cards.scss'\nimport './css/selector.scss'\nimport './css/tabs.scss'\n\nimport bgImg from '../client/assets/background-image.jpg';\nimport france from '../client/assets/france.jpg'\nimport spain from '../client/assets/spain.jpg'\nimport thailand from '../client/assets/thailand.jpg'\nimport japan from '../client/assets/japan.jpg'\n\nimport { handleTabs } from './js/handleTabs';\nimport { handleInput } from './js/handleInput';\nimport { handleImages } from './js/handleImages';\nimport { getTodayDate } from './js/getTodayDate';\nhandleImages(bgImg, france, spain, thailand, japan )\n\n//handleTabs()\n\nconst submitBtn = document.querySelector('#submit');\n\nsubmitBtn.addEventListener('click', function(e) {\n    e.preventDefault();\n    handleInput()\n})\n\nexport {\n    handleTabs,\n    getTodayDate\n}"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","Error","replace","p","handleTabs","tabs","querySelector","tab","querySelectorAll","content","toggleTabs","clickedTab","target","classList","contains","forEach","i","remove","add","id","dataset","addEventListener","async","handleInput","long","lat","city","cityObj","userLocation","userLocationValue","startDate","endDate","endDateValue","warningMsg","departingDate","daysLeft","lengthOfTrip","tripLength","Math","round","valueAsNumber","currentDate","Date","daysRemaining","getTime","date","split","year","month","day","innerHTML","handleDate","fetch","method","credentials","headers","body","JSON","stringify","then","res","json","postalcodes","lng","latLong","data","condition","temp","humidity","windSpeed","pressure","feelsLike","weatherCode","weather","code","expr","toString","charAt","weatherIcon","description","rh","wind_spd","pres","app_temp","updateWeather","popularDestinations","header","toUpperCase","slice","updateDetailsPanel","city_name","getMonth","getFullYear","getDate","updateCurrentDate","userLocationInput","userStartDate","userEndDate","clearInputs","months","forecastCards","valid_date","max_temp","min_temp","updateForecast","imageCards","style","backgroundImage","hits","largeImageURL","imageUrl","webformatURL","updateImages","getTodayDate","setAttribute","removeAttribute","bgImg","franceImg","spainImg","thailandImg","japanImg","backgroundImg","france","spain","thailand","japan","handleImages","preventDefault"],"sourceRoot":""}